version: '3.8'
services:
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      - user-service
    networks:
      - nest-network
    command: >
      sh -c "npm run migration:run && npm run start:dev api-gateway"

  user-service:
    build:
      context: .
      dockerfile: ./apps/user-service/Dockerfile
    ports:
      - '3001:3001'
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - nest-network
    command: npm run start:dev user-service

  notification-service:
    build:
      context: .
      dockerfile: ./apps/notification-service/Dockerfile
    ports:
      - '3003:3003'
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - nest-network
    command: npm run start:dev notification-service

  messaging-service:
    build:
      context: .
      dockerfile: ./apps/messaging-service/Dockerfile
    ports:
      - '3002:3002'
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - nest-network
    command: npm run start:dev messaging-service    

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2434127reza
      POSTGRES_DB: chat
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nest-network

networks:
  nest-network:
    driver: bridge

volumes:
  postgres_data:
