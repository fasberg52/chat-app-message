version: '3.8'
services:
  api-gateway:
    image: api-gateway
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    ports:
      - '3000:3000'
    environment:
      - PORT=3000
      - RMQ_URL=amqp://rabbitmq:5672
      - USER_SERVICE_PORT=3001
      - NOTIFICATION_SERVICE_PORT=3003
      - MESSAGING_SERVICE_PORT=3002
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=2434127reza
      - DATABASE_NAME=chat
      - JWT_SECRET=2434127reza
      - JWT_EXPIRATION=1h
      - JWT_REFRESH_SECRET=2434127reza
      - JWT_REFRESH_EXPIRATION=7d
      - USER_SERVICE_HOST=user-service
      - NOTIFICATION_SERVICE_HOST=notification-service
      - MESSAGING_SERVICE_HOST=message-service
      - SWAGGER_PATH=/swagger
      - SWAGGER_USERNAME=taherian
      - SWAGGER_PASSWORD=123456
      - SWAGGER_TITLE='Message App'
      - SWAGGER_DESCRIPTION='MRT developer'

    depends_on:
      - user-service
      - notification-service
      - rabbitmq
    networks:
      - nest-network
    command: >
      sh -c "npm run migration:run && npm run start:dev api-gateway"

  user-service:
    image: user-service
    build:
      context: .
      dockerfile: ./apps/user-service/Dockerfile
    ports:
      - '3001:3001'
    environment:
      - RMQ_URL=amqp://rabbitmq:5672
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=2434127reza
      - DATABASE_NAME=chat
      - JWT_SECRET=2434127reza
      - JWT_EXPIRATION=1h
      - JWT_REFRESH_SECRET=2434127reza
      - JWT_REFRESH_EXPIRATION=7d
      - USER_SERVICE_HOST=user-service
      - NOTIFICATION_SERVICE_HOST=notification-service
      - MESSAGING_SERVICE_HOST=message-service
      - USER_SERVICE_PORT=3001
      - NOTIFICATION_SERVICE_PORT=3003
      - MESSAGING_SERVICE_PORT=3002
      - PORT=3000

    depends_on:
      - postgres
      - rabbitmq
    networks:
      - nest-network
    command: npm run start:dev user-service

  notification-service:
    image: notification-service
    build:
      context: .
      dockerfile: ./apps/notification-service/Dockerfile
    ports:
      - '3003:3003'

    environment:
      - RMQ_URL=amqp://rabbitmq:5672
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=2434127reza
      - DATABASE_NAME=chat
      - JWT_SECRET=2434127reza
      - JWT_EXPIRATION=1h
      - JWT_REFRESH_SECRET=2434127reza
      - JWT_REFRESH_EXPIRATION=7d
      - USER_SERVICE_HOST=user-service
      - NOTIFICATION_SERVICE_HOST=notification-service
      - MESSAGING_SERVICE_HOST=message-service
      - USER_SERVICE_PORT=3001
      - NOTIFICATION_SERVICE_PORT=3003
      - MESSAGING_SERVICE_PORT=3002
      - PORT=3000      
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - nest-network
    command: npm run start:dev notification-service

  messaging-service:
    image: messaging-service
    build:
      context: .
      dockerfile: ./apps/messaging-service/Dockerfile
    ports:
      - '3002:3002'
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - nest-network
    command: npm run start:dev messaging-service

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2434127reza
      POSTGRES_DB: chat
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nest-network

  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    restart: always
    hostname: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq   
    networks:
      - nest-network

networks:
  nest-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
